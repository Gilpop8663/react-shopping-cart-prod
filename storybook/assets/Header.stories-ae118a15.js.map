{"version":3,"file":"Header.stories-ae118a15.js","sources":["../../src/hooks/recoil/server/useServer.ts","../../src/components/cart/CartStepperWithIcon/CartStepperWithIcon.style.ts","../../src/components/cart/CartStepperWithIcon/index.tsx","../../src/assets/logo.svg","../../src/assets/shop.svg","../../src/components/layout/Logo/Logo.style.ts","../../src/components/layout/Logo/index.tsx","../../src/styles/style.ts","../../src/components/layout/Header/Header.style.ts","../../src/components/layout/Header/index.tsx"],"sourcesContent":["import { useRecoilState } from 'recoil';\nimport serverState from '@recoil/server/serverState';\nimport { ServerName } from '@constants/serverUrlConstants';\n\nexport const useServer = () => {\n  const [server, setServer] = useRecoilState(serverState);\n\n  const handleServer = (newServer: ServerName) => {\n    setServer(newServer);\n  };\n\n  return {\n    server,\n    handleServer,\n  };\n};\n","import { styled } from 'styled-components';\n\nexport const CartWrapper = styled.button`\n  display: flex;\n  color: ${({ theme }) => theme.lightColor};\n`;\n\nexport const CartTitle = styled.div`\n  font-size: 24px;\n`;\n\nexport const CartCountWrapper = styled.div`\n  border-radius: 50%;\n  background-color: #04c09e;\n  width: 2.6rem;\n  height: 2.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 8px;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.sm}) {\n    width: 3.2rem;\n    height: 3.2rem;\n  }\n`;\n\nexport const CartCount = styled.div`\n  font-size: 1.6rem;\n  color: #fff;\n`;\n\nexport const CartText = styled.div`\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    display: none;\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport cartState, { useRefreshCartList } from '@recoil/cart/cartState';\nimport * as S from './CartStepperWithIcon.style';\n\nfunction CartStepperWithIcon() {\n  const cart = useRecoilValue(cartState);\n  const navigate = useNavigate();\n  const refresher = useRefreshCartList();\n\n  return (\n    <S.CartWrapper\n      type=\"button\"\n      aria-label=\"장바구니 페이지로 가기\"\n      role=\"button\"\n      onClick={() => {\n        refresher();\n        navigate('/cart');\n      }}\n    >\n      <S.CartTitle>\n        <S.CartText>장바구니</S.CartText>\n      </S.CartTitle>\n      <S.CartCountWrapper>\n        <S.CartCount aria-live=\"polite\">{cart.length}</S.CartCount>\n      </S.CartCountWrapper>\n    </S.CartWrapper>\n  );\n}\n\nexport default CartStepperWithIcon;\n","export default \"__VITE_ASSET__c2b3a5f0__\"","export default \"__VITE_ASSET__3561996a__\"","import { styled } from 'styled-components';\n\nexport const LogoWrapper = styled.button`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.lightColor};\n`;\n\nexport const CartIcon = styled.img`\n  width: 4rem;\n  height: 4rem;\n`;\n\nexport const LogoContainer = styled.div`\n  margin-right: 1rem;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    display: none;\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useRefreshCartList } from '@recoil/cart/cartState';\nimport logoImage from '@assets/logo.svg';\nimport shopImage from '@assets/shop.svg';\nimport * as S from './Logo.style';\n\nfunction Logo() {\n  const navigate = useNavigate();\n  const refresher = useRefreshCartList();\n\n  return (\n    <S.LogoWrapper\n      type=\"button\"\n      aria-label=\"SHOP 홈페이지로 가기\"\n      role=\"button\"\n      onClick={() => {\n        refresher();\n        navigate('/');\n      }}\n    >\n      <S.LogoContainer>\n        <img src={logoImage} alt=\"로고 이미지\"></img>\n      </S.LogoContainer>\n\n      <img src={shopImage} alt=\"로고 이미지\"></img>\n    </S.LogoWrapper>\n  );\n}\n\nexport default Logo;\n","import styled from 'styled-components';\n\n/**\n * 레이아웃 관련 CSS 스타일은 Bootstrap 기준으로 적용했습니다.\n */\n\nexport const Container = styled.div`\n  padding: 0 20px;\n  margin: 0 auto;\n  max-width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.sm}) {\n    max-width: 540px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n    max-width: 720px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.lg}) {\n    max-width: 960px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.xl}) {\n    max-width: 1140px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.xxl}) {\n    max-width: 1320px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 1rem;\n  column-gap: 1rem;\n`;\n\nexport const Column = styled.div`\n  margin: auto;\n  width: 90%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n    width: 48%;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.lg}) {\n    width: 32%;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.xl}) {\n    width: 24%;\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const Navbar = styled.div`\n  background-color: ${({ theme }) => theme.primaryColor};\n  color: ${({ theme }) => theme.lightColor};\n  margin-bottom: 3rem;\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 80px;\n`;\n","import { ChangeEvent, Suspense } from 'react';\nimport { useServer } from '@hooks/recoil/server/useServer';\nimport CartStepperWithIcon from '@components/cart/CartStepperWithIcon';\nimport SelectBox from '@components/common/SelectBox';\nimport Logo from '@components/layout/Logo';\nimport { SERVER_NAME } from '@constants/serverUrlConstants';\nimport { Container } from '@styles/style';\nimport * as S from './Header.style';\n\nfunction Header() {\n  const { handleServer } = useServer();\n\n  const onChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.currentTarget;\n\n    const result = SERVER_NAME.filter((item) => item === value)[0];\n\n    handleServer(result);\n  };\n\n  return (\n    <S.Navbar>\n      <Container>\n        <S.HeaderWrapper>\n          <Logo />\n          <SelectBox\n            options={[\n              { value: '마코', name: '마코' },\n              { value: '우가', name: '우가' },\n              { value: '허브', name: '허브' },\n            ]}\n            onChange={onChange}\n          />\n          <Suspense>\n            <CartStepperWithIcon />\n          </Suspense>\n        </S.HeaderWrapper>\n      </Container>\n    </S.Navbar>\n  );\n}\n\nexport default Header;\n"],"names":["useServer","server","setServer","useRecoilState","serverState","newServer","CartWrapper","styled","theme","CartTitle","CartCountWrapper","CartCount","CartText","CartStepperWithIcon","cart","useRecoilValue","cartState","navigate","useNavigate","refresher","useRefreshCartList","jsxs","S.CartWrapper","jsx","S.CartTitle","S.CartText","S.CartCountWrapper","S.CartCount","logoImage","shopImage","LogoWrapper","LogoContainer","Logo","S.LogoWrapper","S.LogoContainer","Container","Navbar","HeaderWrapper","Header","handleServer","onChange","event","value","result","SERVER_NAME","item","S.Navbar","S.HeaderWrapper","SelectBox","Suspense"],"mappings":"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"}