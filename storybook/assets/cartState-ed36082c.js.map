{"version":3,"file":"cartState-ed36082c.js","sources":["../../src/utils/cart/fetchCart.ts","../../src/recoil/cart/selector/getCartListSelector.ts","../../src/recoil/cart/cartState.ts"],"sourcesContent":["import { fetchDelete, fetchGet, fetchPatch, fetchPost } from '@utils/fetchUtils';\nimport { ServerName, getCartPath } from '@constants/serverUrlConstants';\nimport { UserInformationType } from '@constants/userConstant';\nimport { CartItemType, ServerCartItemType } from '@type/cartType';\nimport { cartApiWrapper } from './cart';\n\ninterface AddItemToCartApiParams {\n  productId: number;\n  serverName: ServerName;\n  userInfo: UserInformationType;\n}\n\nexport const addItemToCartApi = async ({\n  productId,\n  serverName,\n  userInfo,\n}: AddItemToCartApiParams) => {\n  const response = await fetchPost(\n    getCartPath(serverName),\n    {\n      productId,\n    },\n    {\n      email: userInfo.email,\n      password: userInfo.password,\n    }\n  );\n\n  if (!response) {\n    throw new Error('장바구니에 아이템을 추가하지 못했습니다.');\n  }\n\n  const location = response.headers.get('Location');\n  const cartId = location?.split('/').pop();\n\n  if (!cartId) {\n    throw new Error('장바구니 아이템 생성에 실패했습니다.');\n  }\n\n  return cartId;\n};\n\ninterface RemoveCartItemApiParams {\n  cartId: number;\n  serverName: ServerName;\n  userInfo: UserInformationType;\n}\n\nexport const removeCartItemApi = async ({\n  cartId,\n  serverName,\n  userInfo,\n}: RemoveCartItemApiParams) => {\n  await fetchDelete(`${getCartPath(serverName)}/${cartId}`, {\n    email: userInfo.email,\n    password: userInfo.password,\n  });\n};\n\ninterface UpdateCartItemQuantityApiParams {\n  cartId: number;\n  serverName: ServerName;\n  quantity: number;\n  userInfo: UserInformationType;\n}\n\nexport const updateCartItemQuantityApi = async ({\n  cartId,\n  serverName,\n  quantity,\n  userInfo,\n}: UpdateCartItemQuantityApiParams) => {\n  await fetchPatch(\n    `${getCartPath(serverName)}/${cartId}`,\n    { quantity },\n    {\n      email: userInfo.email,\n      password: userInfo.password,\n    }\n  );\n};\n\ninterface GetCartApiProps {\n  serverName: ServerName;\n  userInfo: UserInformationType;\n}\n\nexport const getCartApi = async ({ serverName, userInfo }: GetCartApiProps) => {\n  const serverCart = await fetchGet<ServerCartItemType[]>(getCartPath(serverName), {\n    email: userInfo.email,\n    password: userInfo.password,\n  });\n  const clientCart: CartItemType[] = cartApiWrapper(serverCart);\n\n  return clientCart;\n};\n","import { selector } from 'recoil';\nimport serverState from '@recoil/server/serverState';\nimport userState from '@recoil/user/userState';\nimport { getCartApi } from '@utils/cart/fetchCart';\nimport { CartItemType } from '@type/cartType';\n\nexport const getCartListSelector = selector<CartItemType[]>({\n  key: 'getCartListSelector',\n  get: async ({ get }) => {\n    const userInfo = get(userState);\n    const serverName = get(serverState);\n    const cartList = getCartApi({ serverName, userInfo });\n\n    return cartList;\n  },\n  cachePolicy_UNSTABLE: { eviction: 'most-recent' },\n});\n","import { atom } from 'recoil';\nimport { CartItemType } from '@type/cartType';\nimport { getCartListSelector } from './selector/getCartListSelector';\n\nconst cartState = atom<CartItemType[]>({\n  key: 'cartState',\n  default: getCartListSelector,\n});\n\nexport default cartState;\n"],"names":["addItemToCartApi","productId","serverName","userInfo","response","fetchPost","getCartPath","location","cartId","removeCartItemApi","fetchDelete","updateCartItemQuantityApi","quantity","fetchPatch","getCartApi","serverCart","fetchGet","cartApiWrapper","getCartListSelector","selector","get","userState","serverState","cartState","atom"],"mappings":"2LAYO,MAAMA,EAAmB,MAAO,CACrC,UAAAC,EACA,WAAAC,EACA,SAAAC,CACF,IAA8B,CAC5B,MAAMC,EAAW,MAAMC,EACrBC,EAAYJ,CAAU,EACtB,CACE,UAAAD,CACF,EACA,CACE,MAAOE,EAAS,MAChB,SAAUA,EAAS,QACrB,CAAA,EAGF,GAAI,CAACC,EACG,MAAA,IAAI,MAAM,wBAAwB,EAG1C,MAAMG,EAAWH,EAAS,QAAQ,IAAI,UAAU,EAC1CI,EAASD,GAAA,YAAAA,EAAU,MAAM,KAAK,MAEpC,GAAI,CAACC,EACG,MAAA,IAAI,MAAM,sBAAsB,EAGjC,OAAAA,CACT,EAQaC,EAAoB,MAAO,CACtC,OAAAD,EACA,WAAAN,EACA,SAAAC,CACF,IAA+B,CAC7B,MAAMO,EAAY,GAAGJ,EAAYJ,CAAU,KAAKM,IAAU,CACxD,MAAOL,EAAS,MAChB,SAAUA,EAAS,QAAA,CACpB,CACH,EASaQ,EAA4B,MAAO,CAC9C,OAAAH,EACA,WAAAN,EACA,SAAAU,EACA,SAAAT,CACF,IAAuC,CAC/B,MAAAU,EACJ,GAAGP,EAAYJ,CAAU,KAAKM,IAC9B,CAAE,SAAAI,CAAS,EACX,CACE,MAAOT,EAAS,MAChB,SAAUA,EAAS,QACrB,CAAA,CAEJ,EAOaW,EAAa,MAAO,CAAE,WAAAZ,EAAY,SAAAC,KAAgC,CAC7E,MAAMY,EAAa,MAAMC,EAA+BV,EAAYJ,CAAU,EAAG,CAC/E,MAAOC,EAAS,MAChB,SAAUA,EAAS,QAAA,CACpB,EAGM,OAF4Bc,EAAeF,CAAU,CAG9D,ECzFaG,EAAsBC,EAAyB,CAC1D,IAAK,sBACL,IAAK,MAAO,CAAE,IAAAC,KAAU,CAChB,MAAAjB,EAAWiB,EAAIC,CAAS,EACxBnB,EAAakB,EAAIE,CAAW,EAG3B,OAFUR,EAAW,CAAE,WAAAZ,EAAY,SAAAC,CAAU,CAAA,CAGtD,EACA,qBAAsB,CAAE,SAAU,aAAc,CAClD,CAAC,ECZKoB,EAAYC,EAAqB,CACrC,IAAK,YACL,QAASN,CACX,CAAC"}