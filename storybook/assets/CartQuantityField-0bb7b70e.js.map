{"version":3,"file":"CartQuantityField-0bb7b70e.js","sources":["../../src/constants/cartConstants.ts","../../src/recoil/cart/withItemQuantityBy.ts","../../src/components/common/Stepper/Stepper.style.ts","../../src/components/common/Stepper/Stepper.tsx","../../src/assets/cart.svg","../../src/components/cart/CartQuantityField/CartQuantityField.style.ts","../../src/components/cart/CartQuantityField/CartQuantityField.tsx"],"sourcesContent":["export const MIN_CART_QUANTITY = 0;\nexport const MAX_CART_QUANTITY = 99;\n","import { DefaultValue, selectorFamily, useRecoilState } from 'recoil';\nimport { MAX_CART_QUANTITY, MIN_CART_QUANTITY } from '@constants/cartConstants';\n\nimport { productListState } from '../product/productListState';\nimport cartState from './cartState';\n\ninterface newType {\n  cartId: number;\n  quantity: number;\n}\n\nconst withItemQuantityBy = selectorFamily<newType, number>({\n  key: 'cartItemQuantityState',\n  get:\n    (productId) =>\n    ({ get }) => {\n      const cart = get(cartState);\n      // TODO: 장바구니 리스트 가\n\n      if (cart.length === 0) return { quantity: 0, cartId: 0 };\n\n      const cartItem = cart.filter((cartItem) => {\n        return cartItem.product.id === productId;\n      })[0];\n\n      if (!cartItem) {\n        return {\n          cartId: 0,\n          quantity: 0,\n        };\n      }\n\n      return { cartId: cartItem.id, quantity: cartItem.quantity };\n    },\n  set:\n    (productId) =>\n    ({ get, set }, newCart) => {\n      if (newCart instanceof DefaultValue) {\n        return;\n      }\n\n      const cartList = get(cartState);\n\n      const { cartId, quantity } = newCart;\n\n      if (quantity < MAX_CART_QUANTITY && quantity >= MIN_CART_QUANTITY) {\n        // Post\n        if (!cartList.some((item) => item.id === cartId)) {\n          if (quantity === 0) return;\n\n          const product = get(productListState).filter((product) => product.id === productId)[0];\n\n          set(cartState, (prevCartList) => [\n            ...prevCartList,\n            {\n              id: cartId,\n              quantity,\n              checked: true,\n              product,\n            },\n          ]);\n\n          return;\n        }\n\n        //Delete\n        if (quantity === 0) {\n          set(cartState, (prevCartList) => prevCartList.filter((item) => item.id !== cartId));\n\n          // fetchApi(`${SERVER[server]}/${CART_PATH}/${cartId}`, {\n          //   method: 'DELETE',\n          // });\n\n          return;\n        }\n\n        // Patch\n        set(cartState, (prevCartList) => {\n          return prevCartList.map((item) => {\n            if (item.id === cartId) {\n              return {\n                ...item,\n                quantity,\n              };\n            } else {\n              return item;\n            }\n          });\n        });\n\n        // fetchApi(`${SERVER[server]}/${CART_PATH}/${cartId}`, {\n        //   method: 'PATCH',\n        //   body: JSON.stringify({ quantity }),\n        // });\n\n        return;\n      }\n    },\n});\n\nexport default withItemQuantityBy;\n\nexport const useCartItemQuantityBy = (productId: number) =>\n  useRecoilState(withItemQuantityBy(productId));\n","import { styled } from 'styled-components';\n\nexport const CartBox = styled.div`\n  display: flex;\n  height: 28px;\n`;\n\nexport const QuantityInput = styled.input`\n  height: 28px;\n  width: 42px;\n  padding: 0px 5px;\n  border: 1px solid ${({ theme }) => theme.secondaryColor};\n\n  &:focus {\n    outline: 2px solid ${({ theme }) => theme.infoColor};\n  }\n`;\n\nexport const QuantityControlButton = styled.button`\n  height: 14px;\n  width: 24px;\n  padding: 0px;\n  border: 1px solid ${({ theme }) => theme.secondaryColor};\n  line-height: 0px;\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { ChangeEvent } from 'react';\n\nimport * as S from './Stepper.style';\n\ninterface StepperProps {\n  quantity: number;\n  onIncrease: () => void;\n  onDecrease: () => void;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  ariaIncreaseLabel?: string;\n  ariaDecreaseLabel?: string;\n}\n\nfunction Stepper({\n  quantity,\n  onIncrease,\n  onDecrease,\n  onChange,\n  ariaIncreaseLabel,\n  ariaDecreaseLabel,\n}: StepperProps) {\n  return (\n    <S.CartBox>\n      <S.QuantityInput data-testid=\"quantity-input\" value={quantity} onChange={onChange} />\n      <S.ButtonBox>\n        <S.QuantityControlButton\n          onClick={onIncrease}\n          aria-label={ariaIncreaseLabel}\n          role=\"increase\"\n        >\n          ⏶\n        </S.QuantityControlButton>\n        <S.QuantityControlButton\n          onClick={onDecrease}\n          aria-label={ariaDecreaseLabel}\n          role=\"decrease\"\n        >\n          ⏷\n        </S.QuantityControlButton>\n      </S.ButtonBox>\n    </S.CartBox>\n  );\n}\n\nexport default Stepper;\n","export default \"__VITE_ASSET__beb99813__\"","import { styled } from 'styled-components';\n\nexport const StepperContainer = styled.div`\n  display: flex;\n  align-items: start;\n`;\n\nexport const CartIcon = styled.button`\n  width: 25px;\n  height: 20px;\n`;\n","import { ProductItemType } from 'types/ProductType';\nimport { useCartItemQuantityBy } from '@recoil/cart/withItemQuantityBy';\nimport { Stepper } from '@components/common/Stepper';\nimport cartIcon from '@assets/cart.svg';\nimport * as S from './CartQuantityField.style';\n\ninterface CartQuantityFieldProps {\n  product: ProductItemType;\n}\n\nfunction CartQuantityField({ product }: CartQuantityFieldProps) {\n  const [cartQuantity, setCartQuantity] = useCartItemQuantityBy(product.id);\n  const { quantity, cartId } = cartQuantity;\n\n  const isQuantityZero = quantity > 0;\n\n  return (\n    <S.StepperContainer>\n      {isQuantityZero ? (\n        <Stepper\n          quantity={quantity}\n          onChange={(event) => {\n            setCartQuantity({ cartId, quantity: Number(event.target.value) });\n          }}\n          onIncrease={() => {\n            setCartQuantity({ cartId, quantity: quantity + 1 });\n          }}\n          onDecrease={() => {\n            setCartQuantity({ cartId, quantity: quantity - 1 });\n          }}\n          ariaIncreaseLabel={`${product.name}의 장바구니에 담긴 개수에서 하나 더하기`}\n          ariaDecreaseLabel={`${product.name}의 장바구니에 담긴 개수에서 하나 빼기`}\n        />\n      ) : (\n        <S.CartIcon type=\"button\" aria-label={`${product.name}를 장바구니에 담기`} role=\"cart-icon\">\n          <img src={cartIcon} alt=\"장바구니 모양\" />\n        </S.CartIcon>\n      )}\n    </S.StepperContainer>\n  );\n}\n\nexport default CartQuantityField;\n"],"names":["MIN_CART_QUANTITY","MAX_CART_QUANTITY","withItemQuantityBy","selectorFamily","productId","get","cart","cartState","cartItem","set","newCart","DefaultValue","cartList","cartId","quantity","item","product","productListState","prevCartList","useCartItemQuantityBy","useRecoilState","CartBox","styled","QuantityInput","theme","QuantityControlButton","ButtonBox","Stepper","onIncrease","onDecrease","onChange","ariaIncreaseLabel","ariaDecreaseLabel","jsxs","S.CartBox","jsx","S.QuantityInput","S.ButtonBox","S.QuantityControlButton","cartIcon","StepperContainer","CartIcon","CartQuantityField","cartQuantity","setCartQuantity","isQuantityZero","S.StepperContainer","event","S.CartIcon"],"mappings":"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"}