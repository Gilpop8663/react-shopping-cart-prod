{"version":3,"file":"index-08651e61.js","sources":["../../src/utils/order/order.ts","../../src/utils/order/fetchOrder.ts","../../src/recoil/order/selector/getOrderListSelector.ts","../../src/recoil/order/orderListState.ts","../../src/components/orders/OrderItemList/OrderItemList.style.ts","../../src/components/orders/OrderItemList/index.tsx"],"sourcesContent":["import { ServerOrderType } from '@type/orderType';\n\ninterface CreateOrderRequestBodyParams {\n  cartItemIds: number[];\n  couponId?: number;\n}\n\nexport const createOrderRequestBody = ({ cartItemIds, couponId }: CreateOrderRequestBodyParams) => {\n  if (!couponId) {\n    return { orderItemIds: cartItemIds };\n  }\n\n  return {\n    orderItemIds: cartItemIds,\n    couponId,\n  };\n};\n\nexport const orderListApiWrapper = (orderList: ServerOrderType[]) => {\n  return orderList.map((order) => orderDetailApiWrapper(order));\n};\n\nexport const orderDetailApiWrapper = (orderDetail: ServerOrderType) => {\n  return {\n    id: orderDetail.id,\n    totalItemsPrice: orderDetail.totalItemsPrice,\n    discountPrice: orderDetail.discountPrice,\n    deliveryFee: orderDetail.deliveryFee,\n    orderItems: orderDetail.orderItems.map((orderItem) => ({\n      orderItemId: orderItem.orderItemId,\n      name: orderItem.name,\n      price: orderItem.price,\n      imageUrl: orderItem.imageUrl,\n      quantity: orderItem.quantity,\n    })),\n  };\n};\n","import { fetchGet, fetchPost } from '@utils/fetchUtils';\nimport { ServerName, getOrderPath } from '@constants/serverUrlConstants';\nimport { UserInformationType } from '@constants/userConstant';\nimport { OrderType, ServerOrderType } from '@type/orderType';\nimport { createOrderRequestBody, orderDetailApiWrapper, orderListApiWrapper } from './order';\n\ninterface GetOrderListApiProps {\n  serverName: ServerName;\n  userInfo: UserInformationType;\n}\n\nexport const getOrderListApi = async ({ serverName, userInfo }: GetOrderListApiProps) => {\n  const serverOrderList = await fetchGet<OrderType[]>(getOrderPath(serverName), {\n    email: userInfo.email,\n    password: userInfo.password,\n  });\n  const clientOrderList = orderListApiWrapper(serverOrderList);\n\n  return clientOrderList;\n};\n\ninterface GetOrderDetailApiParams {\n  serverName: ServerName;\n  orderId: number;\n  userInfo: UserInformationType;\n}\n\nexport const getOrderDetailApi = async ({\n  serverName,\n  orderId,\n  userInfo,\n}: GetOrderDetailApiParams) => {\n  const serverOrderDetail = await fetchGet<ServerOrderType>(\n    `${getOrderPath(serverName)}/${orderId}`,\n    {\n      email: userInfo.email,\n      password: userInfo.password,\n    }\n  );\n  const clientOrderDetail = orderDetailApiWrapper(serverOrderDetail);\n\n  return clientOrderDetail;\n};\n\ninterface SubmitOrderApiParams {\n  serverName: ServerName;\n  cartItemIds: number[];\n  couponId?: number;\n  userInfo: UserInformationType;\n}\n\nexport const submitOrderApi = async ({\n  serverName,\n  cartItemIds,\n  couponId,\n  userInfo,\n}: SubmitOrderApiParams) => {\n  const response = await fetchPost(\n    getOrderPath(serverName),\n    createOrderRequestBody({ cartItemIds, couponId }),\n    {\n      email: userInfo.email,\n      password: userInfo.password,\n    }\n  );\n\n  const location = response.headers.get('Location');\n  const orderId = location?.split('/').pop();\n\n  return orderId;\n};\n","import { selector } from 'recoil';\nimport serverState from '@recoil/server/serverState';\nimport userState from '@recoil/user/userState';\nimport { getOrderListApi } from '@utils/order/fetchOrder';\nimport { OrderType } from '@type/orderType';\n\nexport const getOrderListSelector = selector<OrderType[]>({\n  key: 'getOrderListSelector',\n  get: async ({ get }) => {\n    const userInfo = get(userState);\n    const serverName = get(serverState);\n    const orderList = await getOrderListApi({ serverName, userInfo });\n\n    return orderList;\n  },\n  cachePolicy_UNSTABLE: { eviction: 'most-recent' },\n});\n","import { atom } from 'recoil';\nimport { OrderType } from '@type/orderType';\nimport { getOrderListSelector } from './selector/getOrderListSelector';\n\nexport const orderListState = atom<OrderType[]>({\n  key: 'orderListStateKey',\n  default: getOrderListSelector,\n});\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: 5rem;\n`;\n","import { useRecoilValue } from 'recoil';\nimport { orderListState } from '@recoil/order/orderListState';\nimport OrderItem from './OrderItem';\nimport * as S from './OrderItemList.style';\n\nfunction OrderItemList() {\n  const orders = useRecoilValue(orderListState);\n\n  return (\n    <S.Container>\n      {orders.map((order) => (\n        <OrderItem key={order.id} order={order} isVisibleDetail={true} />\n      ))}\n    </S.Container>\n  );\n}\n\nexport default OrderItemList;\n"],"names":["createOrderRequestBody","cartItemIds","couponId","orderListApiWrapper","orderList","order","orderDetailApiWrapper","orderDetail","orderItem","getOrderListApi","serverName","userInfo","serverOrderList","fetchGet","getOrderPath","getOrderDetailApi","orderId","serverOrderDetail","submitOrderApi","location","fetchPost","getOrderListSelector","selector","get","userState","serverState","orderListState","atom","Container","styled","OrderItemList","orders","useRecoilValue","S.Container","jsx","OrderItem"],"mappings":"gSAOO,MAAMA,EAAyB,CAAC,CAAE,YAAAC,EAAa,SAAAC,KAC/CA,EAIE,CACL,aAAcD,EACd,SAAAC,CAAA,EALO,CAAE,aAAcD,GASdE,EAAuBC,GAC3BA,EAAU,IAAKC,GAAUC,EAAsBD,CAAK,CAAC,EAGjDC,EAAyBC,IAC7B,CACL,GAAIA,EAAY,GAChB,gBAAiBA,EAAY,gBAC7B,cAAeA,EAAY,cAC3B,YAAaA,EAAY,YACzB,WAAYA,EAAY,WAAW,IAAKC,IAAe,CACrD,YAAaA,EAAU,YACvB,KAAMA,EAAU,KAChB,MAAOA,EAAU,MACjB,SAAUA,EAAU,SACpB,SAAUA,EAAU,QAAA,EACpB,CAAA,GCvBOC,EAAkB,MAAO,CAAE,WAAAC,EAAY,SAAAC,KAAqC,CACvF,MAAMC,EAAkB,MAAMC,EAAsBC,EAAaJ,CAAU,EAAG,CAC5E,MAAOC,EAAS,MAChB,SAAUA,EAAS,QAAA,CACpB,EAGM,OAFiBR,EAAoBS,CAAe,CAG7D,EAQaG,EAAoB,MAAO,CACtC,WAAAL,EACA,QAAAM,EACA,SAAAL,CACF,IAA+B,CAC7B,MAAMM,EAAoB,MAAMJ,EAC9B,GAAGC,EAAaJ,CAAU,KAAKM,IAC/B,CACE,MAAOL,EAAS,MAChB,SAAUA,EAAS,QACrB,CAAA,EAIK,OAFmBL,EAAsBW,CAAiB,CAGnE,EASaC,EAAiB,MAAO,CACnC,WAAAR,EACA,YAAAT,EACA,SAAAC,EACA,SAAAS,CACF,IAA4B,CAU1B,MAAMQ,GATW,MAAMC,EACrBN,EAAaJ,CAAU,EACvBV,EAAuB,CAAE,YAAAC,EAAa,SAAAC,EAAU,EAChD,CACE,MAAOS,EAAS,MAChB,SAAUA,EAAS,QACrB,CAAA,GAGwB,QAAQ,IAAI,UAAU,EAGzC,OAFSQ,GAAA,YAAAA,EAAU,MAAM,KAAK,KAGvC,EChEaE,EAAuBC,EAAsB,CACxD,IAAK,uBACL,IAAK,MAAO,CAAE,IAAAC,KAAU,CAChB,MAAAZ,EAAWY,EAAIC,CAAS,EACxBd,EAAaa,EAAIE,CAAW,EAG3B,OAFW,MAAMhB,EAAgB,CAAE,WAAAC,EAAY,SAAAC,CAAU,CAAA,CAGlE,EACA,qBAAsB,CAAE,SAAU,aAAc,CAClD,CAAC,ECZYe,EAAiBC,EAAkB,CAC9C,IAAK,oBACL,QAASN,CACX,CAAC,ECLYO,EAAYC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,ECGhC,SAASC,GAAgB,CACjB,MAAAC,EAASC,EAAeN,CAAc,EAE5C,aACGO,EAAA,CACE,SAAAF,EAAO,IAAK1B,GACV6B,EAAA,IAAAC,EAAA,CAAyB,MAAA9B,EAAc,gBAAiB,EAAA,EAAzCA,EAAM,EAAyC,CAChE,CACH,CAAA,CAEJ"}